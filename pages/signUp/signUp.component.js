"use strict";
var core_1 = require("@angular/core");
var router_1 = require("@angular/router");
var page_1 = require("ui/page");
require("rxjs/add/operator/take");
var store_1 = require('@ngrx/store');
var user_1 = require("../../share/user");
var dialogs = require("ui/dialogs");
var view = require("ui/core/view");
var firebase = require("nativescript-plugin-firebase");
var Toast = require("nativescript-toast");
var fetchModule = require("fetch");
var SignUpComponent = (function () {
    function SignUpComponent(router, page, store) {
        var _this = this;
        this.router = router;
        this.page = page;
        this.store = store;
        this.isDatePickerVisible = false;
        this.user = new user_1.User();
        this.store$ = this.store.select('dateData');
        this.store$.subscribe(function (s) { return _this.user.ambbgndt = s; });
    }
    SignUpComponent.prototype.ngOnInit = function () {
        var _this = this;
        firebase.addOnPushTokenReceivedCallback(function (tokenreal) {
            console.log(tokenreal);
            _this.token = tokenreal;
        });
        // let idTextfield = <TextField>this.firstTextField.nativeElement;   
        // idTextfield.focus();
        this.showLogin = true;
        var firstTextFieldId = this.page.getViewById("firstTextFieldId");
        firstTextFieldId.focus();
    };
    SignUpComponent.prototype.showDatePicker = function () {
        var textFielsBDate = this.page.getViewById("textFieldBDate");
        this.router.navigate(["/datePicker"]);
        setTimeout(function () {
            textFielsBDate.dismissSoftInput();
        }, 100);
    };
    SignUpComponent.prototype.signUp = function () {
        var _this = this;
        this.user.ambno = this.user.ambno.toUpperCase();
        if (!this.user.isTaiwanID()) {
            this.displayActionDialog("請輸入正確的身份證號碼格式");
            return;
        }
        if (!this.user.isValidEmail()) {
            this.displayActionDialog("請輸入有效的電子信箱");
            return;
        }
        if (this.user.ambno === "" || this.user.ambemail === "") {
            this.displayActionDialog("請輸入所有資料");
            return;
        }
        this.showLogin = false;
        var parsedate = this.user.ambbgndt.toISOString().slice(0, 10).replace(/-/g, "");
        var taiwanDate = Number(parsedate) - 19110000;
        fetchModule.fetch("http://122.146.168.11/AppRegister/api/ApplyforReg/PushCloudNotifyNumber", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ ambno: this.user.ambno, ambbgndt: "0" + taiwanDate, asrtype: "D2", ambemail: this.user.ambemail, ambaddr: this.user.ambaddr, atktokenid: this.token })
        })
            .then(function (response) {
            _this.router.navigate(["/login"]);
            var toast = Toast.makeText("稍後寄出密碼通知");
            toast.show();
            _this.showLogin = true;
        }, function (error) {
            console.log(error);
        });
    };
    SignUpComponent.prototype.displayActionDialog = function (msg) {
        var options = {
            message: msg,
            okButtonText: "確定"
        };
        dialogs.alert(options);
    };
    SignUpComponent = __decorate([
        core_1.Component({
            selector: "signUp",
            templateUrl: "pages/signUp/signUp.html",
            styleUrls: ["pages/signUp/signUp.css"],
        }), 
        __metadata('design:paramtypes', [router_1.Router, page_1.Page, store_1.Store])
    ], SignUpComponent);
    return SignUpComponent;
}());
exports.SignUpComponent = SignUpComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnblVwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNpZ25VcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHFCQUEwRCxlQUFlLENBQUMsQ0FBQTtBQUMxRSx1QkFBdUIsaUJBQWlCLENBQUMsQ0FBQTtBQUd6QyxxQkFBcUIsU0FBUyxDQUFDLENBQUE7QUFDL0IsUUFBTyx3QkFBd0IsQ0FBQyxDQUFBO0FBQ2hDLHNCQUFzQixhQUFhLENBQUMsQ0FBQTtBQUNwQyxxQkFBbUIsa0JBQ25CLENBQUMsQ0FEb0M7QUFDckMsSUFBWSxPQUFPLFdBQU0sWUFBWSxDQUFDLENBQUE7QUFFdEMsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBR3JDLElBQU8sUUFBUSxXQUFXLDhCQUE4QixDQUFDLENBQUM7QUFDMUQsSUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUM7QUFDNUMsSUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBWXJDO0lBWUkseUJBQW9CLE1BQWMsRUFBUyxJQUFVLEVBQVMsS0FBc0I7UUFaeEYsaUJBbUdDO1FBdkZ1QixXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVMsU0FBSSxHQUFKLElBQUksQ0FBTTtRQUFTLFVBQUssR0FBTCxLQUFLLENBQWlCO1FBSDVFLHdCQUFtQixHQUFXLEtBQUssQ0FBQztRQUsxQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksV0FBSSxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLE1BQU0sR0FBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLEtBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsRUFBdEIsQ0FBc0IsQ0FBQyxDQUFDO0lBSXJE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QUMsQ0FBQyxDQUFDO1lBQy9CLElBQUksS0FBSyxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDdkMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ2IsS0FBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFDekIsQ0FBQyxFQUFFLFVBQUMsS0FBSztZQUNOLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdkIsQ0FBQyxDQUFDLENBQUM7SUFJVCxDQUFDO0lBRUEsNkNBQW1CLEdBQW5CLFVBQW9CLEdBQUc7UUFFcEIsSUFBSSxPQUFPLEdBQUc7WUFDVixPQUFPLEVBQUUsR0FBRztZQUNaLFlBQVksRUFBRSxJQUFJO1NBQ3JCLENBQUM7UUFDRixPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUF2R1A7UUFBQyxnQkFBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLFFBQVE7WUFDbEIsV0FBVyxFQUFFLDBCQUEwQjtZQUN2QyxTQUFTLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQztTQUN2QyxDQUFDOzt1QkFBQTtJQW9HRixzQkFBQztBQUFELENBQUMsQUFuR0QsSUFtR0M7QUFuR1ksdUJBQWUsa0JBbUczQixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBPbkluaXQsIFZpZXdDaGlsZCAgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xuaW1wb3J0IHsgRGF0ZVBpY2tlciB9IGZyb20gXCJ1aS9kYXRlLXBpY2tlclwiO1xuaW1wb3J0IHsgVGV4dEZpZWxkIH0gZnJvbSBcInVpL3RleHQtZmllbGRcIjtcbmltcG9ydCB7IFBhZ2UgfSBmcm9tIFwidWkvcGFnZVwiO1xuaW1wb3J0IFwicnhqcy9hZGQvb3BlcmF0b3IvdGFrZVwiO1xuaW1wb3J0IHsgU3RvcmUgfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQge1VzZXJ9IGZyb20gXCIuLi8uLi9zaGFyZS91c2VyXCJcbmltcG9ydCAqIGFzIGRpYWxvZ3MgZnJvbSBcInVpL2RpYWxvZ3NcIjtcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcy9SeCc7XG5jb25zdCB2aWV3ID0gcmVxdWlyZShcInVpL2NvcmUvdmlld1wiKTtcbmltcG9ydCBhY3Rpdml0eUluZGljYXRvck1vZHVsZSA9IHJlcXVpcmUoXCJ1aS9hY3Rpdml0eS1pbmRpY2F0b3JcIik7XG5cbmltcG9ydCBmaXJlYmFzZSA9IHJlcXVpcmUoXCJuYXRpdmVzY3JpcHQtcGx1Z2luLWZpcmViYXNlXCIpO1xuY29uc3QgVG9hc3QgPSByZXF1aXJlKFwibmF0aXZlc2NyaXB0LXRvYXN0XCIpO1xuY29uc3QgZmV0Y2hNb2R1bGUgPSByZXF1aXJlKFwiZmV0Y2hcIik7XG5cblxuaW50ZXJmYWNlIEFwcFN0YXRlIHtcbiBzdGF0ZSA6IERhdGVcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcInNpZ25VcFwiLFxuICB0ZW1wbGF0ZVVybDogXCJwYWdlcy9zaWduVXAvc2lnblVwLmh0bWxcIixcbiAgc3R5bGVVcmxzOiBbXCJwYWdlcy9zaWduVXAvc2lnblVwLmNzc1wiXSxcbn0pXG5leHBvcnQgY2xhc3MgU2lnblVwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICAvL0BWaWV3Q2hpbGQoXCJmaXJzdFRleHRGaWVsZElkXCIpIGZpcnN0VGV4dEZpZWxkOiBFbGVtZW50UmVmO1xuICAgIHByaXZhdGUgc3RvcmUkOiBPYnNlcnZhYmxlPERhdGU+O1xuXG4gICAgcHJpdmF0ZSB1c2VyOlVzZXI7XG5cbiAgICBwcml2YXRlIHRva2VuOmFueTtcbiAgICBwcml2YXRlIHNob3dMb2dpbjpib29sZWFuO1xuXG4gICAgcHJpdmF0ZSBpc0RhdGVQaWNrZXJWaXNpYmxlOmJvb2xlYW4gPSBmYWxzZTtcblxuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSByb3V0ZXI6IFJvdXRlcixwcml2YXRlIHBhZ2U6IFBhZ2UscHJpdmF0ZSBzdG9yZTogU3RvcmU8QXBwU3RhdGU+KSB7XG5cbiAgICAgIHRoaXMudXNlciA9IG5ldyBVc2VyKCk7XG4gICAgICB0aGlzLnN0b3JlJCA9ICB0aGlzLnN0b3JlLnNlbGVjdCgnZGF0ZURhdGEnKTtcbiAgICAgIHRoaXMuc3RvcmUkLnN1YnNjcmliZShzID0+IHRoaXMudXNlci5hbWJiZ25kdCA9IHMpO1xuXG5cblxuICAgIH1cblxuICAgICAgbmdPbkluaXQoKSB7XG5cbiAgICAgICAgZmlyZWJhc2UuYWRkT25QdXNoVG9rZW5SZWNlaXZlZENhbGxiYWNrKFxuICAgICAgICAgICh0b2tlbnJlYWwpPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2codG9rZW5yZWFsKTsgICBcbiAgICAgICAgICAgIHRoaXMudG9rZW4gPSB0b2tlbnJlYWw7XG4gICAgICAgICAgfVxuICAgICAgICApXG5cbiAgICAgICAgLy8gbGV0IGlkVGV4dGZpZWxkID0gPFRleHRGaWVsZD50aGlzLmZpcnN0VGV4dEZpZWxkLm5hdGl2ZUVsZW1lbnQ7ICAgXG4gICAgICAgIC8vIGlkVGV4dGZpZWxkLmZvY3VzKCk7XG4gICAgICAgICAgdGhpcy5zaG93TG9naW4gPSB0cnVlO1xuXG4gICAgICAgICAgbGV0IGZpcnN0VGV4dEZpZWxkSWQgPSB0aGlzLnBhZ2UuZ2V0Vmlld0J5SWQ8VGV4dEZpZWxkPihcImZpcnN0VGV4dEZpZWxkSWRcIik7XG4gICAgICAgICAgICAgIGZpcnN0VGV4dEZpZWxkSWQuZm9jdXMoKTtcbiAgICAgIH1cblxuXG5cblxuICAgICAgc2hvd0RhdGVQaWNrZXIoKSB7XG4gICAgICAgICAgbGV0IHRleHRGaWVsc0JEYXRlID0gdGhpcy5wYWdlLmdldFZpZXdCeUlkPFRleHRGaWVsZD4oXCJ0ZXh0RmllbGRCRGF0ZVwiKTtcbiAgICAgICAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbXCIvZGF0ZVBpY2tlclwiXSk7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICB0ZXh0RmllbHNCRGF0ZS5kaXNtaXNzU29mdElucHV0KCk7XG4gICAgICAgIH0sIDEwMCk7XG5cbiAgICAgIH1cblxuICAgICAgc2lnblVwKCl7XG4gICAgICAgICAgdGhpcy51c2VyLmFtYm5vID0gdGhpcy51c2VyLmFtYm5vLnRvVXBwZXJDYXNlKClcbiAgICAgICAgICBpZighdGhpcy51c2VyLmlzVGFpd2FuSUQoKSl7XG4gICAgICAgICAgICAgIHRoaXMuZGlzcGxheUFjdGlvbkRpYWxvZyhcIuiri+i8uOWFpeato+eiuueahOi6q+S7veitieiZn+eivOagvOW8j1wiKTtcbiAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKCF0aGlzLnVzZXIuaXNWYWxpZEVtYWlsKCkpIHtcbiAgICAgICAgICAgIHRoaXMuZGlzcGxheUFjdGlvbkRpYWxvZyhcIuiri+i8uOWFpeacieaViOeahOmbu+WtkOS/oeeusVwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZih0aGlzLnVzZXIuYW1ibm89PT1cIlwiIHx8IHRoaXMudXNlci5hbWJlbWFpbD09PVwiXCIgKXtcbiAgICAgICAgICAgICAgdGhpcy5kaXNwbGF5QWN0aW9uRGlhbG9nKFwi6KuL6Ly45YWl5omA5pyJ6LOH5paZXCIpO1xuICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLnNob3dMb2dpbiA9IGZhbHNlO1xuXG4gICAgICAgICAgbGV0IHBhcnNlZGF0ZSA9IHRoaXMudXNlci5hbWJiZ25kdC50b0lTT1N0cmluZygpLnNsaWNlKDAsMTApLnJlcGxhY2UoLy0vZyxcIlwiKTtcbiAgICAgICAgICBsZXQgdGFpd2FuRGF0ZSA9IE51bWJlcihwYXJzZWRhdGUpIC0xOTExMDAwMDtcbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgIGZldGNoTW9kdWxlLmZldGNoKFwiaHR0cDovLzEyMi4xNDYuMTY4LjExL0FwcFJlZ2lzdGVyL2FwaS9BcHBseWZvclJlZy9QdXNoQ2xvdWROb3RpZnlOdW1iZXJcIiwge1xuICAgICAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHthbWJubzogdGhpcy51c2VyLmFtYm5vLCBhbWJiZ25kdDogXCIwXCIrdGFpd2FuRGF0ZSwgYXNydHlwZTogXCJEMlwiLGFtYmVtYWlsOiB0aGlzLnVzZXIuYW1iZW1haWwsIGFtYmFkZHI6IHRoaXMudXNlci5hbWJhZGRyLGF0a3Rva2VuaWQ6IHRoaXMudG9rZW59KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSk9PiB7XG4gICAgICAgICAgICAgIHRoaXMucm91dGVyLm5hdmlnYXRlKFtcIi9sb2dpblwiXSk7XG4gICAgICAgICAgICAgICAgbGV0IHRvYXN0ID0gVG9hc3QubWFrZVRleHQoXCLnqI3lvozlr4Tlh7rlr4bnorzpgJrnn6VcIik7XG4gICAgICAgICAgICAgICAgdG9hc3Quc2hvdygpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xvZ2luID0gdHJ1ZTtcbiAgICAgICAgICAgICB9LCAoZXJyb3IpID0+e1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgICAgICAgIH0pO1xuXG5cblxuICAgICAgfVxuXG4gICAgICAgZGlzcGxheUFjdGlvbkRpYWxvZyhtc2cpIHtcblxuICAgICAgICAgIGxldCBvcHRpb25zID0geyBcbiAgICAgICAgICAgICAgbWVzc2FnZTogbXNnLFxuICAgICAgICAgICAgICBva0J1dHRvblRleHQ6IFwi56K65a6aXCJcbiAgICAgICAgICB9O1xuICAgICAgICAgIGRpYWxvZ3MuYWxlcnQob3B0aW9ucyk7XG4gICAgICB9ICBcbn1cblxuIl19