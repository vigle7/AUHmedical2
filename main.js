"use strict";
var platform_1 = require("nativescript-angular/platform");
var app_module_1 = require("./app.module");
var LocalNotifications = require("nativescript-local-notifications");
var firebase = require("nativescript-plugin-firebase");
var Toast = require("nativescript-toast");
var dialogs = require("ui/dialogs");
firebase.init({
    onMessageReceivedCallback: function (message) {
        if (message.title === null || message.title === undefined || message.title === "") {
            return;
        }
        LocalNotifications.hasPermission().then(function (granted) {
            if (!granted) {
                return LocalNotifications.requestPermission();
            }
            else {
                dialogs.alert({
                    message: message.body + "\n\n (訊息保留於上方通知列)",
                    okButtonText: "確定"
                });
                LocalNotifications.schedule([{
                        title: message.title,
                        body: message.body,
                        sound: null,
                    }]).then(function () {
                    console.log("Notification scheduled");
                }, function (error) {
                    console.log("scheduling error: " + error);
                });
                return Promise.resolve(true);
            }
        }).then(function (granted) {
            if (!granted) {
                var toast = Toast.makeText("通知權限請至設定開啟", "long");
                toast.show();
            }
        });
    }
});
//setStatusBarColors();
platform_1.platformNativeScriptDynamic({ startPageActionBarHidden: false }).bootstrapModule(app_module_1.AppModule);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHlCQUE0QywrQkFBK0IsQ0FBQyxDQUFBO0FBRTVFLDJCQUEwQixjQUFjLENBQUMsQ0FBQTtBQUN6QyxJQUFZLGtCQUFrQixXQUFNLGtDQUFrQyxDQUFDLENBQUE7QUFFdkUsSUFBTyxRQUFRLFdBQVcsOEJBQThCLENBQUMsQ0FBQztBQUMxRCxJQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FBQztBQUM1QyxJQUFZLE9BQU8sV0FBTSxZQUFZLENBQUMsQ0FBQTtBQUlwQyxRQUFRLENBQUMsSUFBSSxDQUFDO0lBQ1oseUJBQXlCLEVBQUUsVUFBUyxPQUFPO1FBRXpDLEVBQUUsQ0FBQSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEtBQUcsSUFBSSxJQUFJLE9BQU8sQ0FBQyxLQUFLLEtBQUcsU0FBUyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEtBQUcsRUFBRSxDQUFDLENBQUEsQ0FBQztZQUMxRSxNQUFNLENBQUE7UUFDUixDQUFDO1FBRUssa0JBQWtCLENBQUMsYUFBYSxFQUFFLENBQUMsSUFBSSxDQUNuQyxVQUFDLE9BQU87WUFDTixFQUFFLENBQUEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFBLENBQUM7Z0JBQ0wsTUFBTSxDQUFDLGtCQUFrQixDQUFDLGlCQUFpQixFQUFFLENBQUM7WUFDdEQsQ0FBQztZQUFBLElBQUksQ0FBQSxDQUFDO2dCQUVFLE9BQU8sQ0FBQyxLQUFLLENBQUM7b0JBQ1YsT0FBTyxFQUFFLE9BQU8sQ0FBQyxJQUFJLEdBQUMsbUJBQW1CO29CQUN6QyxZQUFZLEVBQUUsSUFBSTtpQkFDckIsQ0FBQyxDQUFDO2dCQUVILGtCQUFrQixDQUFDLFFBQVEsQ0FBQyxDQUFDO3dCQUM3QixLQUFLLEVBQUUsT0FBTyxDQUFDLEtBQUs7d0JBQ3BCLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSTt3QkFDbEIsS0FBSyxFQUFFLElBQUk7cUJBQ1osQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNKO29CQUNFLE9BQU8sQ0FBQyxHQUFHLENBQUMsd0JBQXdCLENBQUMsQ0FBQztnQkFDeEMsQ0FBQyxFQUNELFVBQVMsS0FBSztvQkFDWixPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixHQUFHLEtBQUssQ0FBQyxDQUFDO2dCQUM1QyxDQUFDLENBQ0osQ0FBQTtnQkFDSCxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNqQyxDQUFDO1FBQ0gsQ0FBQyxDQUNKLENBQUMsSUFBSSxDQUNGLFVBQUMsT0FBTztZQUNOLEVBQUUsQ0FBQSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUEsQ0FBQztnQkFDVCxJQUFJLEtBQUssR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsQ0FBQztnQkFDakQsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ2pCLENBQUM7UUFDSCxDQUFDLENBQUMsQ0FBQTtJQUNkLENBQUM7Q0FFRixDQUFDLENBQUM7QUFHTCx1QkFBdUI7QUFDdkIsc0NBQTJCLENBQUMsRUFBQyx3QkFBd0IsRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxzQkFBUyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwbGF0Zm9ybU5hdGl2ZVNjcmlwdER5bmFtaWMgfSBmcm9tIFwibmF0aXZlc2NyaXB0LWFuZ3VsYXIvcGxhdGZvcm1cIjtcblxuaW1wb3J0IHsgQXBwTW9kdWxlIH0gZnJvbSBcIi4vYXBwLm1vZHVsZVwiO1xuaW1wb3J0ICogYXMgTG9jYWxOb3RpZmljYXRpb25zIGZyb20gXCJuYXRpdmVzY3JpcHQtbG9jYWwtbm90aWZpY2F0aW9uc1wiO1xuXG5pbXBvcnQgZmlyZWJhc2UgPSByZXF1aXJlKFwibmF0aXZlc2NyaXB0LXBsdWdpbi1maXJlYmFzZVwiKTtcbmNvbnN0IFRvYXN0ID0gcmVxdWlyZShcIm5hdGl2ZXNjcmlwdC10b2FzdFwiKTtcbmltcG9ydCAqIGFzIGRpYWxvZ3MgZnJvbSBcInVpL2RpYWxvZ3NcIjtcblxuXG5cbiAgZmlyZWJhc2UuaW5pdCh7ICAvL+WcqGZvcmVncm91bmTmiY3mnIPln7fooYwgIGJhY2tnb3J1bmTlj6rmnInpgJrnn6XliJfnmoTpgJrnn6VcbiAgICBvbk1lc3NhZ2VSZWNlaXZlZENhbGxiYWNrOiBmdW5jdGlvbihtZXNzYWdlKSB7XG5cbiAgICAgIGlmKG1lc3NhZ2UudGl0bGU9PT1udWxsIHx8IG1lc3NhZ2UudGl0bGU9PT11bmRlZmluZWQgfHwgbWVzc2FnZS50aXRsZT09PVwiXCIpe1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgICAgICAgTG9jYWxOb3RpZmljYXRpb25zLmhhc1Blcm1pc3Npb24oKS50aGVuKFxuICAgICAgICAgICAgICAgIChncmFudGVkKT0+e1xuICAgICAgICAgICAgICAgICAgaWYoIWdyYW50ZWQpeyAvL2FwcGxl5rKS5pyJ5o6o5pKt5qyK6ZmQ77yM55m85Ye66KuL5rGC5qyK6ZmQ6YCa55+lIChhbmRyb2lk5o6o5pKt5LiN6ZyA5qyK6ZmQ5omA5LulZ3JhbnTkuIDlrprmmK90cnVl77yM5Y+q6Yed5bCNYXBwbGUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBMb2NhbE5vdGlmaWNhdGlvbnMucmVxdWVzdFBlcm1pc3Npb24oKTtcbiAgICAgICAgICAgICAgICAgIH1lbHNle1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRpYWxvZ3MuYWxlcnQoeyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UuYm9keStcIlxcblxcbiAo6KiK5oGv5L+d55WZ5pa85LiK5pa56YCa55+l5YiXKVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tCdXR0b25UZXh0OiBcIueiuuWumlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIExvY2FsTm90aWZpY2F0aW9ucy5zY2hlZHVsZShbe1xuICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogbWVzc2FnZS50aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYm9keTogbWVzc2FnZS5ib2R5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VuZDogbnVsbCwgLy8gc3VwcHJlc3MgdGhlIGRlZmF1bHQgc291bmRcbiAgICAgICAgICAgICAgICAgICAgICAgIH1dKS50aGVuKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJOb3RpZmljYXRpb24gc2NoZWR1bGVkXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwic2NoZWR1bGluZyBlcnJvcjogXCIgKyBlcnJvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKS50aGVuKFxuICAgICAgICAgICAgICAgIChncmFudGVkKT0+e1xuICAgICAgICAgICAgICAgICAgaWYoIWdyYW50ZWQpeyAvL+iri+axguasiumZkOiiq+aLklxuICAgICAgICAgICAgICAgICAgICAgIGxldCB0b2FzdCA9IFRvYXN0Lm1ha2VUZXh0KFwi6YCa55+l5qyK6ZmQ6KuL6Iez6Kit5a6a6ZaL5ZWfXCIsIFwibG9uZ1wiKTtcbiAgICAgICAgICAgICAgICAgICAgICB0b2FzdC5zaG93KCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICB9XG5cbiAgfSk7XG5cblxuLy9zZXRTdGF0dXNCYXJDb2xvcnMoKTtcbnBsYXRmb3JtTmF0aXZlU2NyaXB0RHluYW1pYyh7c3RhcnRQYWdlQWN0aW9uQmFySGlkZGVuOiBmYWxzZX0pLmJvb3RzdHJhcE1vZHVsZShBcHBNb2R1bGUpOyJdfQ==